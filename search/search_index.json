{"config":{"lang":["ja"],"separator":"[\\s\\-\uff0c\u3002]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u6b22\u8fce\u6765\u5230 Lzh's Blog","text":"<p>\u201c\u5728\u4e0d\u8fdc\u7684\u5c06\u6765\uff0c\u6ce8\u5b9a\u4f1a\u6709\u5f88\u591a\u4eba\u91cd\u8d70\u4f60\u5f53\u5e74\u8d70\u8fc7\u7684\u8def\u3002\u201d</p> <p>\u201c\u4ed6\u4eec\u53ef\u80fd\u534a\u9014\u79bb\u53bb\uff0c\u4e5f\u53ef\u80fd\u8d70\u5f97\u6bd4\u4f60\u66f4\u8fdc\uff0c\u4f46\u90fd\u6709\u4e00\u4e2a\u540c\u6837\u5fae\u4e0d\u8db3\u9053\u7684\u5f00\u59cb\u3002\u201d</p>"},{"location":"2023/01/1/","title":"webcopy \u9879\u76ee","text":"<p>\u672c\u6587\u7f16\u5199\u4e8e 2023/01/17 16:18 (CTS)</p> <p>\u672c\u6587\u66f4\u65b0\u4e8e 2023/01/18 19:18 (CTS)</p> <p>Note</p> <p>\u672c\u9879\u76ee\u5df2\u505c\u6b62\u66f4\u65b0</p> <p>\u63d0\u793a</p> <p>\u672c\u9879\u76ee\u5bf9\u4e8e\u5b58\u50a8\u5904\u7406\u4e0d\u5f53</p> <p>\u4e0d\u9002\u5408\u5728\u751f\u4ea7\u73af\u5883\u4f7f\u7528</p>"},{"location":"2023/01/1/#\u9879\u76ee\u5730\u5740","title":"\u9879\u76ee\u5730\u5740","text":""},{"location":"2023/01/1/#\u5f00\u53d1\u76ee\u7684","title":"\u5f00\u53d1\u76ee\u7684","text":"<p>\u5f53\u4e0b\u4e92\u8054\u7f51\u5df2\u878d\u5165\u5230\u6bcf\u4e2a\u4eba\u7684\u751f\u6d3b\u4e4b\u4e2d\uff0c\u800c\u968f\u7740\u4e92\u8054\u7f51\u7684\u53d1\u5c55\uff0c\u4eba\u4eec\u6709\u4e86 \u4f7f\u7528\u4e92\u8054\u7f51\u8fdb\u884c\u6c9f\u901a\u7684\u9700\u6c42\uff0c\u8fd9\u65f6\u5c31\u51fa\u73b0\u4e86\u5404\u79cd\u7684\u5373\u65f6\u7f51\u7edc\u901a\u4fe1\u8f6f\u4ef6\uff0c\u800c\u8fd9\u4e9b\u8f6f\u4ef6\u6709\u4e00\u4e9b\u5f0a\u7aef 1. \u7528\u6237\u9700\u8981\u6ce8\u518c\u548c\u767b\u5f55 2. \u7528\u6237\u53d1\u9001\u7684\u6587\u4ef6\u4e0d\u53ef\u592a\u5927 3. \u5982\u679c\u53d1\u7684\u662f\u89c6\u9891\u3001\u97f3\u9891\u3001\u56fe\u7247 \u8f6f\u4ef6\u4f1a\u653e\u5f03\u6e05\u6670\u5ea6 4. \u7528\u6237\u5982\u679c\u8981\u4f7f\u7528\u5219\u5fc5\u987b\u4e0b\u8f7d\u5e94\u7528 5. \u53ef\u80fd\u4f1a\u6cc4\u9732\u4e2a\u4eba\u9690\u79c1 6. \u56e0\u4e3a\u7528\u6237\u5bb9\u6613\u9057\u5fd8\u81ea\u5df1\u5b58\u7684\u4fe1\u606f\uff0c\u5bfc\u81f4\u6ca1\u6709\u53ca\u65f6\u5220\u9664\u65e0\u7528\u6570\u636e\u6587\u4ef6\uff0c\u670d\u52a1\u7aef\u4f1a\u5b58\u8bb8\u591a\u7528\u6237\u4e0d\u9700\u8981\u7684\u6570\u636e\u6587\u4ef6</p> <p>\u8fd9\u6837\u5c31\u9700\u8981\u6709\u4e00\u4e2a\u53ef\u4ee5\u89e3\u51b3\u4ee5\u4e0a\u95ee\u9898\u7684\u65b9\u6848\uff0c\u800c\u6211\u5c31\u5236\u4f5c\u4e86\u4e00\u4e2a\u540d\u4e3a\"\u4e91\u5206\u4eab\"\u7684\u7f51\u7ad9\uff0c\u6b64\u7f51\u7ad9\u62e5\u6709\u4ee5\u4e0b\u51e0\u70b9\u4f18\u70b9</p> <ol> <li>\u7528\u6237\u4f7f\u7528\u4e0d\u9700\u8981\u6ce8\u518c\u548c\u767b\u5f55\uff0c\u4f7f\u7528\u6237\u53ef\u4ee5\u62e5\u6709\u66f4\u591a\u65f6\u95f4\u6ce8\u91cd\u5185\u5bb9\uff0c\u540c\u65f6\u4e5f\u51cf\u5c11\u4e86\u7528\u6237\u9690\u79c1\u7684\u6cc4\u9732</li> <li>\u8fd9\u4e2a\u89e3\u51b3\u65b9\u6848\u4e3a\u7f51\u7ad9\u6240\u4ee5\u7528\u6237\u4e0d\u9700\u8981\u4e0b\u8f7d\u4efb\u4f55\u5176\u4ed6\u5e94\u7528\u53ea\u9700\u4e00\u4e2a\u6d4f\u89c8\u5668\u5c31\u53ef\u4ee5\u4f7f\u7528\u8be5\u5e94\u7528</li> <li>\u8fd9\u4e2a\u7f51\u7ad9\u4e0d\u4f1a\u5bf9\u89c6\u9891\u3001\u97f3\u9891\u3001\u56fe\u7247 \u8fdb\u884c\u4efb\u4f55\u538b\u7f29\uff0c\u4fdd\u8bc1\u4e86\u6587\u4ef6\u4e0d\u4f1a\u88ab\u66f4\u6539</li> <li>\u6b64\u7f51\u7ad9\u91c7\u7528\u9605\u540e\u5373\u711a\u63aa\u65bd\uff0c\u65e2\u4fdd\u62a4\u4e86\u7528\u6237\u7684\u9690\u79c1\uff0c\u4e5f\u4fdd\u8bc1\u4e86\u670d\u52a1\u5668\u4e0d\u4f1a\u5b58\u50a8\u65e0\u7528\u4fe1\u606f\u6587\u4ef6</li> <li>\u6b64\u7f51\u7ad9\u6e90\u7801\u5df2\u7ecf\u5f00\u6e90\u5728gitee\u4e14\u4ee3\u7801\u6e05\u6670\u6613\u8bfb\uff0c\u6a21\u5757\u6027\u5f3a\u4fbf\u4e8e\u8fdb\u884c\u4e8c\u6b21\u5f00\u53d1</li> </ol> <p>\u5e0c\u671b\u8fd9\u4e2a\u9879\u76ee\u80fd\u5207\u5b9e\u9645\u5730\u4f7f\u540c\u5b66\u4eec\u53ef\u4ee5\u4fbf\u6377\u5730\u4e0e\u670b\u53cb\u5206\u4eab\u81ea\u5df1\u7684\u6570\u636e</p>"},{"location":"2023/01/1/#\u9879\u76ee\u8d44\u6e90","title":"\u9879\u76ee\u8d44\u6e90","text":"<p>\u6b64\u9879\u76ee\u4f7f\u7528\u4e86Python3.8(\u8ba1\u7b97\u673a\u7f16\u7a0b\u8bed\u8a00)\u548cDjango3.2(Python Web MTV\u6846\u67b6)\u8fdb\u884c\u4e86\u7f51\u7ad9\u540e\u7aef\u7684\u5f00\u53d1</p> <p>\u800c\u524d\u7aef\u5219\u4f7f\u7528\u4e86Html5(\u5373\u8d85\u6587\u672c\u6807\u8bb0\u8bed\u8a00),CSS(\u5c42\u53e0\u6837\u5f0f\u8868)\u548cJavascript(\u89e3\u91ca\u578b\u7f16\u7a0b\u8bed\u8a00)\u4ee5\u53caBootstrap(\u524d\u7aef\u5f00\u53d1\u6846\u67b6)\u7b49\u6280\u672f\u6765\u5b9e\u73b0</p>"},{"location":"2023/01/1/#\u9879\u76ee\u90e8\u7f72","title":"\u9879\u76ee\u90e8\u7f72","text":"<p><pre><code>pip install -r requirements.txt\n</code></pre> <pre><code>python manage.py makemigrations\n</code></pre> <pre><code>python manage.py migrate\n</code></pre> <pre><code>python manage.py runserver\n</code></pre></p> <p>\u5b8c\u6210</p> <p>\u6267\u884c\u540e \u6253\u5f00 http://127.0.0.1:8000 \u89c2\u770b\u6548\u679c</p> <p>\u63d0\u793a</p> <p>\u5982\u679c\u6267\u884c\u51fa\u9519 \u8bf7\u68c0\u67e5\u65e5\u5fd7</p>"},{"location":"2023/01/1/#\u529f\u80fd\u63cf\u8ff0","title":"\u529f\u80fd\u63cf\u8ff0","text":"<p>\u6b64\u529f\u80fd\u53ef\u4ee5\u8ba9\u4f60\u5c06\u4e00\u4e9b\u6587\u5b57\u4fbf\u6377\u5730\u5206\u4eab\u7ed9\u522b\u4eba\uff0c\u6216\u5728\u5176\u4ed6\u8bbe\u5907\u4e0a\u83b7\u53d6\u5185\u5bb9\u3002 \u9996\u5148\uff0c\u5148\u627e\u5230\u201c\u5206\u4eab\u6587\u5b57\u201d\uff0c\u7136\u540e\u5728\u5927\u8f93\u5165\u6846\u4e2d\u8f93\u5165\u81ea\u5df1\u60f3\u8981\u5206\u4eab\u7684\u6587\u5b57\uff0c\u5199\u5b8c\u540e\u518d\u70b9\u51fb\u63d0\u4ea4\u6309\u94ae\uff0c\u4fe1\u606f\u4f1a\u88ab\u63d0\u4ea4\u4e0a\u53bb\uff0c\u800c\u9875\u9762\u4f1a\u88ab\u91cd\u5b9a\u5411\u5230\u53e6\u4e00\u4e2a\u9875\u9762\u3002 \u8fd9\u4e2a\u754c\u9762\u9876\u4e0a\u4f1a\u6709\u4e00\u4e2a\u9ec4\u8272\u7684\u63d0\u793a\u6846\uff0c\u91cc\u9762\u4e3a\u4f60\u63d0\u4f9b\u4e86\u4e24\u79cd\u5206\u4eab\u7684\u65b9\u5f0f\uff0c\u4f60\u53ef\u4ee5\u5c06\u4fe1\u606f\u5bf9\u5e94\u7684\u4ee3\u7801\u7ed9\u522b\u4eba\uff0c\u522b\u4eba\u5c31\u53ef\u5728\u9875\u9762\u9876\u7aef\u7684\u63d0\u53d6\u529f\u80fd\uff0c\u63d0\u53d6\u51fa\u4f60 \u5206\u4eab\u7684\u6587\u5b57\uff0c\u4f60\u4e5f\u53ef\u4ee5\u70b9\u51fb\u590d\u5236\u6309\u94ae\uff0c\u5c06\u590d\u5236\u7684\u94fe\u63a5\u53d1\u9001\u7ed9\u522b\u4eba\uff0c\u522b\u4eba\u901a\u8fc7\u8bbf\u95ee\u94fe\u63a5\u6765\u67e5\u770b\u4f60\u63d0\u4ea4\u7684\u5185\u5bb9\u3002</p> <p>\u6b64\u529f\u80fd\u53ef\u4ee5\u8ba9\u4f60\u5c06\u6587\u4ef6\u4fbf\u6377\u5730\u5206\u4eab\u7ed9\u522b\u4eba\uff0c\u6216\u5728\u5176\u4ed6\u8bbe\u5907\u4e0a\u83b7\u53d6\u6587\u4ef6\u3002 \u9996\u5148\uff0c\u5148\u627e\u5230\u201c\u5206\u4eab\u6587\u4ef6\u201d\uff0c\u7136\u540e\u70b9\u51fb\u6d4f\u89c8\uff0c\u9009\u4e2d\u4e00\u4e2a\u975e\u7a7a\u7684\u6587\u4ef6\uff0c\u70b9\u51fb\u63d0\u4ea4\u6309\u94ae\uff0c\u6587\u4ef6\u4f1a\u88ab\u63d0\u4ea4\u4e0a\u53bb\uff0c\u800c\u9875\u9762\u4f1a\u88ab\u91cd\u5b9a\u5411\u5230\u53e6\u4e00\u4e2a\u9875\u9762\u3002 \u8fd9\u4e2a\u9875\u9762\u9876\u4e0a\u4f1a\u6709\u4e00\u4e2a\u9ec4\u8272\u7684\u63d0\u793a\u6846\uff0c\u91cc\u9762\u4e3a\u4f60\u63d0\u4f9b\u4e86\u4e24\u79cd\u5206\u4eab\u7684\u65b9\u5f0f\uff0c\u4f60\u53ef\u4ee5\u5c06\u4fe1\u606f\u5bf9\u5e94\u7684\u4ee3\u7801\u7ed9\u522b\u4eba\uff0c\u522b\u4eba\u5c31\u53ef\u5728\u9875\u9762\u9876\u7aef\u7684\u63d0\u53d6\u529f\u80fd\uff0c\u63d0\u53d6\u51fa\u4f60 \u5206\u4eab\u7684\u6587\u4ef6\uff0c\u4f60\u4e5f\u53ef\u4ee5\u70b9\u51fb\u590d\u5236\u6309\u94ae\uff0c\u5c06\u590d\u5236\u7684\u94fe\u63a5\u53d1\u9001\u7ed9\u522b\u4eba\uff0c\u522b\u4eba\u901a\u8fc7\u8bbf\u95ee\u94fe\u63a5\u6765\u67e5\u770b\u4f60\u63d0\u4ea4\u7684\u6587\u4ef6\u3002</p> <p>\u6b64\u529f\u80fd\u53ef\u4ee5\u8ba9\u4f60\u67e5\u770b\u5176\u4ed6\u4eba\u5206\u4eab\u7ed9\u4f60\u7684\u6587\u5b57\u6216\u6587\u4ef6\u3002 \u9996\u5148\uff0c\u5728\u9875\u9762\u7684\u9876\u7aef\u4f1a\u6709\u4e00\u4e2a\u5c0f\u8f93\u5165\u6846\uff0c\u8f93\u5165\u522b\u4eba\u7ed9\u4f60\u7684\u5206\u4eab\u7801\uff0c\u70b9\u51fb\u65c1\u8fb9\u7684\u84dd\u8272\u63d0\u4ea4\u6309\u94ae\uff0c\u9875\u9762\u4f1a\u88ab\u91cd\u5b9a\u5411\u5230\u53e6\u4e00\u4e2a\u9875\u9762\u3002 \u8fd9\u4e2a\u9875\u9762\u4e0a\u4f1a\u6709\u522b\u4eba\u4e0a\u4f20\u7684\u6587\u5b57\u6216\u4e0b\u8f7d\u6309\u94ae\uff0c\u53d6\u51b3\u4e8e\u522b\u4eba\u4e0a\u4f20\u7684\u662f\u6587\u5b57\u8fd8\u662f\u6587\u4ef6\uff0c\u5982\u679c\u8981\u5173\u95ed\u5219\u70b9\u51fb\u4e00\u4e0b\u9ed1\u8272\u80cc\u666f\u5373\u53ef</p>"},{"location":"2023/01/2/","title":"Lzh's Contest \u9898\u89e3","text":"<p>\u672c\u6587\u7f16\u5199\u4e8e 2023/01/20 18:17 (CTS)</p> <p>\u672c\u6587\u66f4\u65b0\u4e8e 2023/01/20 18:17 (CTS)</p>"},{"location":"2023/01/2/#\u9898\u76ee\u94fe\u63a5","title":"\u9898\u76ee\u94fe\u63a5","text":""},{"location":"2023/01/2/#\u9898\u89e3","title":"\u9898\u89e3","text":""},{"location":"2023/01/2/#a","title":"A","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint n;int a[129];\nint main(void){\ncin&gt;&gt;n;\nfor(int i=0;i&lt;n;i++){\nchar t;\ncin&gt;&gt;t;\na[t]++;\n}\nfor(int i=0;i&lt;129;i++){\nif(a[i]!=0){\ncout&lt;&lt;(char)i&lt;&lt;\":\"&lt;&lt;a[i]&lt;&lt;endl;\n}\n}\nreturn 0;\n}\n</code></pre>"},{"location":"2023/01/2/#b","title":"B","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nstring a,ans;\nint main(void){\ncin&gt;&gt;a;\nfor(int i=0;i&lt;a.size();i++){\nans+=(a[i]-'0'+65);\n}\ncin&gt;&gt;a;\nfor(int i=0;i&lt;a.size();i++){\nans+=(a[i]-'0'+65);\n}\ncin&gt;&gt;a;ans+=a;\ncin&gt;&gt;a;\nfor(int i=0;i&lt;a.size();i++){\nif(a[i]&lt;='9'&amp;&amp;a[i]&gt;='0'){\nif((a[i]-'0')&lt;ans.size()){\nans[a[i]-'0']+=1;\n}\n}\n} int i=0;\nwhile(ans[i]!='\\0'){\nif(97&lt;=ans[i]&amp;&amp;ans[i]&lt;=122){\nans[i]=ans[i]-32;\n}\ni++;\n}\ncout&lt;&lt;ans;\nreturn 0;\n} </code></pre>"},{"location":"2023/01/2/#c","title":"C","text":"<pre><code>#include&lt;stdio.h&gt;\n#include&lt;string&gt;\n#include&lt;string.h&gt;\n#include&lt;iostream&gt;\nusing namespace std;\nint compare(string str1,string str2) {\nif(str1.length()&gt;str2.length()) return 1;\nelse if(str1.length()&lt;str2.length())  return -1;\nelse return str1.compare(str2);\n}\nstring add(string str1,string str2) {\nstring str;\nint len1=str1.length();\nint len2=str2.length();\nif(len1&lt;len2) {\nfor(int i=1; i&lt;=len2-len1; i++)\nstr1=\"0\"+str1;\n} else {\nfor(int i=1; i&lt;=len1-len2; i++)\nstr2=\"0\"+str2;\n}\nlen1=str1.length();\nint cf=0;\nint temp;\nfor(int i=len1-1; i&gt;=0; i--) {\ntemp=str1[i]-'0'+str2[i]-'0'+cf;\ncf=temp/10;\ntemp%=10;\nstr=char(temp+'0')+str;\n}\nif(cf!=0)  str=char(cf+'0')+str;\nreturn str;\n}\n\nstring sub(string str1,string str2) {\nstring str;\nint tmp=str1.length()-str2.length();\nint cf=0;\nfor(int i=str2.length()-1; i&gt;=0; i--) {\nif(str1[tmp+i]&lt;str2[i]+cf) {\nstr=char(str1[tmp+i]-str2[i]-cf+'0'+10)+str;\ncf=1;\n} else {\nstr=char(str1[tmp+i]-str2[i]-cf+'0')+str;\ncf=0;\n}\n}\nfor(int i=tmp-1; i&gt;=0; i--) {\nif(str1[i]-cf&gt;='0') {\nstr=char(str1[i]-cf)+str;\ncf=0;\n} else {\nstr=char(str1[i]-cf+10)+str;\ncf=1;\n}\n}\nstr.erase(0,str.find_first_not_of('0'));\nreturn str;\n}\nstring mul(string str1,string str2) {\nstring str;\nint len1=str1.length();\nint len2=str2.length();\nstring tempstr;\nfor(int i=len2-1; i&gt;=0; i--) {\ntempstr=\"\";\nint temp=str2[i]-'0';\nint t=0;\nint cf=0;\nif(temp!=0) {\nfor(int j=1; j&lt;=len2-1-i; j++)\ntempstr+=\"0\";\nfor(int j=len1-1; j&gt;=0; j--) {\nt=(temp*(str1[j]-'0')+cf)%10;\ncf=(temp*(str1[j]-'0')+cf)/10;\ntempstr=char(t+'0')+tempstr;\n}\nif(cf!=0) tempstr=char(cf+'0')+tempstr;\n}\nstr=add(str,tempstr);\n}\nstr.erase(0,str.find_first_not_of('0'));\nreturn str;\n}\n\nint main() {\nchar ops;cin&gt;&gt;ops;\nstring str1,str2;\ncin&gt;&gt;str1&gt;&gt;str2;\nswitch(ops){\ncase '+':\ncout&lt;&lt;add(str1,str2)&lt;&lt;endl;\nbreak;\ncase '-':\ncout&lt;&lt;sub(str1,str2)&lt;&lt;endl;\nbreak;\ncase '*':\ncout&lt;&lt;mul(str1,str2)&lt;&lt;endl;\nbreak;\n}\nreturn 0;\n}\n</code></pre>"},{"location":"2023/01/2/#d","title":"D","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint main(void){\nchar a[99];\ncin&gt;&gt;a;\nint i=0;\nwhile(a[i]!='\\0'){\nif(97&lt;=a[i]&amp;&amp;a[i]&lt;=122){\na[i]=a[i]-32;\n}\ni++;\n}\ncout&lt;&lt;a;\nreturn 0;\n}\n</code></pre>"},{"location":"2023/01/3/","title":"P6649\u300cSWTR-05\u300dGrid \u9898\u89e3","text":"<p>\u672c\u6587\u7f16\u5199\u4e8e 2023/01/31 9:45 (CTS)</p> <p>\u672c\u6587\u66f4\u65b0\u4e8e 2023/01/31 9:45 (CTS)</p>"},{"location":"2023/01/3/#\u9898\u76ee\u94fe\u63a5-p6649swtr-05grid","title":"\u9898\u76ee\u94fe\u63a5 P6649\u300cSWTR-05\u300dGrid","text":""},{"location":"2023/01/3/#\u5206\u6790","title":"\u5206\u6790","text":""},{"location":"2023/01/3/#\u9898\u610f","title":"\u9898\u610f:","text":"<p>\u5230\u4e86\u6bcf\u4e00\u884c\u7b2c\u4e00\u4e2a\u5230\u7684\u70b9\u65f6\u53ea\u80fd\u5411\u5de6\u6216\u8005\u5411\u4e0a\u8d70\uff0c\u5426\u5219\u53ef\u4ee5\u5411\u53f3\u5411\u5de6\u5411\u4e0a\u8d70\uff0c\u6c42\u7ecf\u8fc7\u6240\u6709\u683c\u5b50\u7684\u6700\u5c0f\u503c\u3002</p>"},{"location":"2023/01/3/#\u601d\u8def","title":"\u601d\u8def","text":"<p>\u6240\u4ee5\u8fd9\u9053\u9898\u53ef\u4ee5\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u6765\u505a</p> <p>\u4e00\u5f00\u59cb\u5f00\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u6b64\u70b9\u5728\u53ef\u4ee5\u5f80\u5de6\u8d70\u7684\u60c5\u51b5\u4e0b\u7684\u6700\u5c0f\u503c\u3002</p> <p>\u5224\u65ad\u8fd9\u4e2a\u70b9\u53ef\u4ee5\u4ece\u53f3\u5230\u8fd8\u662f\u4ece\u4e0b\u5230\u7684\u8f6c\u79fb\u65b9\u7a0b\u3002\u56e0\u4e3a\u8981\u52a0\u4e0a\u4e4b\u524d\u7684\u503c\uff0c\u6240\u4ee5\u8f6c\u79fb\u65b9\u7a0b\u6211\u7528\u4e86\u4e24\u4e2a\u6570\u7ec4\uff0c\u4e00\u4e2a\u8bb0\u5f55\u503c\uff0c\u4e00\u4e2a\u5b58\u50a8\u539f\u59cb\u503c\u3002</p>"},{"location":"2023/01/3/#\u6ce8\u610f","title":"\u6ce8\u610f","text":"<p>\u8bb0\u5f97\u5f00long long</p>"},{"location":"2023/01/3/#\u8f6c\u79fb\u65b9\u7a0b\u662f","title":"\u8f6c\u79fb\u65b9\u7a0b\u662f","text":"<pre><code>f[i][j]=min(f[i+1][j],f[i][j+1])+a[i][j];\nf[i][j]+=sum[i][j-1]-pp[i][j-1];\n</code></pre>"},{"location":"2023/01/3/#\u5b8c\u6574\u4ee3\u7801","title":"\u5b8c\u6574\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nlong long n,m,a[1001][1001],f[1005][1005],sum[1005][1005],pp[1005][1005],ans;\nint main(void){\ncin&gt;&gt;n&gt;&gt;m;\nfor(int i=1;i&lt;=n;++i){\nf[i][m+1]=1e9;\nfor(int j=1;j&lt;=m;++j){\ncin&gt;&gt;a[i][j];\nf[i][j]=1e9;\nsum[i][j]=sum[i][j-1]+a[i][j];\npp[i][j]=max(pp[i][j-1],sum[i][j]);\n}\n}\nfor(int i=n;i&gt;=1;--i){\nfor(int j=m;j&gt;=1;--j){\nf[i][j]=min(f[i+1][j],f[i][j+1])+a[i][j];\n}\nfor(int j=1;j&lt;=m;++j){\nf[i][j]+=sum[i][j-1]-pp[i][j-1];\n}\n}\nans=1e9;\nfor(int i=1;i&lt;=m;++i){\nans=min(ans,f[1][i]);\n}\ncout&lt;&lt;ans;\nreturn 0;\n}\n</code></pre>"},{"location":"2023/02/1/","title":"arduino \u4f7f\u7528\u8d85\u58f0\u6ce2\u6a21\u5757 HC-SR04","text":"<p>\u672c\u6587\u7f16\u5199\u4e8e 2023/02/03 9:45 (CTS)</p> <p>\u672c\u6587\u66f4\u65b0\u4e8e 2023/02/03 9:45 (CTS)</p> <pre><code>int a,b;\n\nvoid setup() {\n// put your setup code here, to run once:\npinMode(9, OUTPUT);// trig\npinMode(10, INPUT);// echo\nSerial.begin(9600);\n}\n\nvoid loop() {\n// put your main code here, to run repeatedly:\ndelayMicroseconds(10);\n\ndigitalWrite(9,HIGH);\ndelayMicroseconds(10);\ndigitalWrite(9,LOW);\n\ndelayMicroseconds(1);   a=pulseIn(10,HIGH);\nb=a*340/2;\n\nSerial.print(a);\nSerial.print(\" \");\nSerial.println(b);\n}\n</code></pre>"},{"location":"2023/02/2/","title":"python \u6a21\u62df\u629b\u786c\u5e01\u6982\u7387","text":"<p>\u672c\u6587\u7f16\u5199\u4e8e 2023/02/03 10:45 (CTS)</p> <p>\u672c\u6587\u66f4\u65b0\u4e8e 2023/02/03 10:45 (CTS)</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom random import randint\nfrom uuid import uuid4\ndef rnum():\n    return randint(0,1)\nx=[]\ny=[]\nz=[]\nn=0\nys=0\nzs=0\nfor i in range(1000000):\n    n=n+1\n    if rnum()==0:\n        zs=zs+1\n    else:\n        ys=ys+1\n    x.append(i)\n    y.append(ys/n)\n    z.append(zs/n)\n# print(x,y)\nl1=plt.plot(x,y,z)\nl2=plt.plot(x,[0.5]*1000000,color=\"black\", linewidth=1)\nplt.legend(handles=[l1, l2], labels=['P(A)', '0.5'])\nplt.show()\n# plt.savefig(str(uuid4())+'.jpg')\n# plt.clf()\n</code></pre>"},{"location":"2023/02/3/","title":"python \u5c40\u57df\u7f51\u5185\u804a\u5929","text":"<p>\u672c\u6587\u7f16\u5199\u4e8e 2023/02/04 10:45 (CTS)</p> <p>\u672c\u6587\u66f4\u65b0\u4e8e 2023/02/04 10:45 (CTS)</p> <p></p>"},{"location":"2023/02/3/#\u4f7f\u7528\u65b9\u6cd5","title":"\u4f7f\u7528\u65b9\u6cd5","text":"<p>\u4f60\u53ef\u4ee5\u8fd0\u884c <code>pip install msgs</code> \u4ee5\u5b89\u88c5\u6b64\u7a0b\u5e8f</p> <p>\u7136\u540e\u6267\u884c <code>msgs</code> \u5373\u53ef\u6253\u5f00</p>"},{"location":"2023/02/3/#\u6e90\u7801","title":"\u6e90\u7801","text":"<pre><code>import threading\nimport tkinter as tk\nfrom tkinter import ttk\nfrom tkinter import messagebox,scrolledtext,END\nfrom socket import *\nimport json,time\ninfo='''\n\n'''\nclass App(object):\n    def __init__(self):\n        self.root = tk.Tk()\n        self.root.title(\"\u901a\u8baf\u5c0f\u5de5\u5177\")\n        self.root.resizable(False, False)\n        self.layout()\n        # self.root.protocol(\"WM_DELETE_WINDOW\", self._stop)\n        self.root.mainloop()\n    def _stop(self):\n        exit(0)\n    def layout(self):\n        tabContainer = ttk.Notebook(self.root)\n        tabContainer.pack()\n\n        HomeTab = ttk.Frame(tabContainer)\n        tabContainer.add(HomeTab, text='\u4e3b\u754c\u9762')\n        self._layHomeTab(HomeTab)\n\n        ipTab = ttk.Frame(tabContainer)\n        tabContainer.add(ipTab, text='\u67e5\u8be2IP')\n        self._layIpTab(ipTab)\n\n        # HelpTab = ttk.Frame(tabContainer)\n        # tabContainer.add(HelpTab, text='\u5e2e\u52a9')\n        # self._layHelpTab(HelpTab)\n    def _layIpTab(self, tab):\n        transferBtn = ttk.Button(tab, text='\u67e5\u8be2', command=self._scachip)\n        transferBtn.grid(row=7, column=0, padx=0, pady=20)\n\n        self._ipout=tk.Text(tab)\n        self._ipout.grid(row=0, column=1, padx=3, pady=10, columnspan=2,rowspan=2)\n    def _scachip(self):\n        self._ipout.delete(1.0,\"end\")\n        addrs = getaddrinfo(gethostname(),None)\n        for item in addrs:\n            if item[0]==AF_INET:\n                self._ipout.insert('insert',item[4][0]+\"\\n\")\n    def _layHomeTab(self,tab):\n        self.msgst=tk.scrolledtext.ScrolledText(tab,height=33, wrap=tk.WORD)\n        self.msgst.grid(row=0, column=0, padx=0, pady=0, columnspan=3,rowspan=5)\n        # self.msgst=tk.Text(tab,height=33)\n        # self.msgst.grid(row=0, column=0, padx=0, pady=0, columnspan=3,rowspan=5)\n\n        # self.inputs=tk.Text(tab,width=40)\n        self.inputs = tk.scrolledtext.ScrolledText(tab, width=40, wrap=tk.WORD)\n        self.inputs.grid(row=0, column=4, padx=3,\n                         pady=10, columnspan=4, rowspan=2)\n\n        temp = ttk.Button(tab, text='\u6e05\u7a7a', command=self._clear)\n        temp.grid(row=2, column=4, padx=0, pady=0)\n\n        temp = ttk.Button(tab, text='\u53d1\u9001', command=self._gomsg)\n        temp.grid(row=2, column=5, padx=0, pady=0)\n\n        self._PORT = tk.StringVar()\n        self._PORT.set(\"8000\")\n        ttk.Label(tab, text='\u7aef\u53e3:') \\\n            .grid(row=2, column=6, padx=5, pady=10)\n        ttk.Entry(tab, textvariable=self._PORT, justify='left', width=10) \\\n            .grid(row=2, column=7, padx=5, pady=10, columnspan=1)\n\n        self._IP = tk.StringVar()\n        self._IP.set(\"127.0.0.1\")\n        ttk.Label(tab, text='\u76ee\u6807IP:') \\\n            .grid(row=3, column=4, padx=5, pady=10)\n        ttk.Entry(tab, textvariable=self._IP, justify='left', width=10) \\\n            .grid(row=3, column=5, padx=5, pady=10, columnspan=1)\n\n        self._IPme = tk.StringVar()\n        self._IPme.set(\"127.0.0.1\")\n        ttk.Label(tab, text='\u672c\u5730IP:') \\\n            .grid(row=3, column=6, padx=5, pady=10)\n        ttk.Entry(tab, textvariable=self._IPme, justify='left', width=10) \\\n            .grid(row=3, column=7, padx=5, pady=10, columnspan=1)\n\n        temp = ttk.Button(tab, text='\u505c\u6b62', command=self._stopserver)\n        temp.grid(row=4, column=4, padx=0, pady=0, columnspan=2)\n\n        temp = ttk.Button(tab, text='\u8fd0\u884c', command=self._runserver)\n        temp.grid(row=4, column=6, padx=0, pady=0, columnspan=2)\n    def _layHelpTab(self,tab):\n        ttk.Label(tab,text=info).grid(row=0,column=0)\n    def _clear(self):\n        self.inputs.delete(1.0,\"end\")\n    def _gomsg(self):\n        try:\n            tcp_client_socket = socket(AF_INET, SOCK_STREAM)\n            tcp_client_socket.connect((self._IP.get(), int(self._PORT.get())))\n            send_data = self.inputs.get(1.0,\"end\")\n            tcp_client_socket.send(self._msgsEncode(send_data).encode(\"gbk\"))\n            # recvData = tcp_client_socket.recv(1024)\n            tcp_client_socket.close()\n            self._clear()\n        except Exception as e:\n            messagebox.showerror(\"ERROR\",e)\n    def _runserver(self):\n        self.serverthread=threading.Thread(target=self._server)\n        self.serverthreadstop=False\n        self.serverthread.start()\n    def _stopserver(self):\n        # self.serverthread.stop()\n        self.serverthreadstop=True\n    def _server(self):\n        while True:\n            tcp_server_socket = socket(AF_INET, SOCK_STREAM)\n            tcp_server_socket.bind((self._IPme.get(), int(self._PORT.get())))\n            tcp_server_socket.listen(128)\n            # tcp_server_socket.setblocking(False)\n            client_socket, clientAddr = tcp_server_socket.accept()\n            recv_data = client_socket.recv(10000)\n            # self.msgst.insert('insert',\"[\"+clientAddr[0]+\"]():\\n\"+recv_data.decode(\"gbk\")+\"\\n\")\n            self.msgst.insert('insert',self._msgsDecode(recv_data.decode(\"gbk\"),clientAddr))\n            self.msgst.see(END)\n            client_socket.send(\"OK200\".encode('gbk'))\n            client_socket.close()\n            if self.serverthreadstop:\n                break\n    def _msgsDecode(self,recv_data,clientAddr):\n        temp=json.loads(recv_data)\n        return \"[\"+clientAddr[0]+\"](\"+temp[\"time\"]+\"):\\n\"+temp[\"data\"]+\"\\n\"\n    def _msgsEncode(self,data):\n        temp=json.dumps({\n            \"time\":self._gettime(),\n            \"data\":data\n        })\n        return temp\n    def _gettime(self):\n        t=time.localtime(time.time())\n        return str(t.tm_year)+\"/\"+str(t.tm_mon)+\"/\"+str(t.tm_mday)+\" \"+str(t.tm_hour)+\":\"+str(t.tm_min)+\":\"+str(t.tm_sec)\ndef runapp():\n    app=App()\nif __name__ == '__main__':\n    app = App()\n</code></pre>"},{"location":"2023/02/4/","title":"arduino \u84dd\u7259\u63a7\u5236LED","text":"<p>\u672c\u6587\u7f16\u5199\u4e8e 2023/02/04 11:45 (CTS)</p> <p>\u672c\u6587\u66f4\u65b0\u4e8e 2023/02/04 13:45 (CTS)</p> <pre><code>char data='0';\nvoid setup() {\n  // put your setup code here, to run once:\n  Serial.begin(9600);\n  pinMode(7, OUTPUT);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  if(Serial.available()!=0){\n    data=Serial.read();\n    if(data=='0'){\n      digitalWrite(7, LOW);\n      Serial.println(\"LED will off.\");\n    }else if(data=='1'){\n      digitalWrite(7, HIGH);\n      Serial.println(\"LED will on.\");\n    }\n  }\n}\n</code></pre>"},{"location":"2023/02/5/","title":"P1028 \u6570\u7684\u8ba1\u7b97 \u9898\u89e3","text":"<p>\u672c\u6587\u7f16\u5199\u4e8e 2023/02/26 12:19 (CTS)</p> <p>\u672c\u6587\u66f4\u65b0\u4e8e 2023/02/26 12:19 (CTS)</p>"},{"location":"2023/02/5/#\u9898\u76ee\u94fe\u63a5-p1028-noip2001-\u666e\u53ca\u7ec4-\u6570\u7684\u8ba1\u7b97","title":"\u9898\u76ee\u94fe\u63a5 P1028 [NOIP2001 \u666e\u53ca\u7ec4] \u6570\u7684\u8ba1\u7b97","text":""},{"location":"2023/02/5/#\u5b8c\u6574\u4ee3\u7801","title":"\u5b8c\u6574\u4ee3\u7801","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint main(void){\nint e[1111];\nint t;\ncin&gt;&gt;t;\ne[1]=1;\nfor(int i=2;i&lt;=t;i++){\ne[i]=e[i-1];\nif(i%2==0){\ne[i]+=e[i/2];\n}\n}\ncout&lt;&lt;e[t];\nreturn 0;\n} </code></pre>"},{"location":"2023/03/1/","title":"CSP-J2023 SD\u8865\u6d4b","text":"<p>\u672c\u6587\u7f16\u5199\u4e8e 2023/03/07 9:45 (CTS)</p> <p>\u672c\u6587\u66f4\u65b0\u4e8e 2023/03/07 9:45 (CTS)</p>"},{"location":"2023/03/1/#t1-planting","title":"T1 planting","text":"<pre><code>#include &lt;cstdio&gt;\nusing namespace std;\nlong long n;\nint a[1000009];\nlong long max(long long a,long long b){\nif(a&gt;b){\nreturn a;\n}else{\nreturn b;\n}\n}\nint main(){\nfreopen(\"planting.in\",\"r\",stdin);\nfreopen(\"planting.out\",\"w\",stdout);\nscanf(\"%lld\",&amp;n);\nlong long max_tree=0;\nfor(long long i=1;i&lt;=n;i++){\nlong long t1,t2;\nscanf(\"%lld %lld\",&amp;t1,&amp;t2);\nmax_tree=max(max_tree,t1);\nmax_tree=max(max_tree,t2);\nfor(int j=t1;j&lt;=t2;j++){\na[j]++;\n}\n}\nlong long maxx=0;\nfor(long long i=1;i&lt;=max_tree;i++){\nmaxx=max(maxx,a[i]);\n}\nprintf(\"%lld\",maxx);\nfclose(stdin);\nfclose(stdout);\nreturn 0;\n}\n</code></pre>"},{"location":"2023/03/1/#t2-banquet","title":"T2 banquet","text":"<pre><code>#include &lt;cstdio&gt;\n#include &lt;iostream&gt;\nusing namespace std;\nint T;\nint n,x[100009],t[100009];\nint max_p=0;\nint max(int a,int b){\nif(a&gt;b){\nreturn a;\n}else{\nreturn b;\n}\n}\ndouble max_d(double a,double b){\nif(a&gt;b){\nreturn a;\n}else{\nreturn b;\n}\n}\ndouble min_d(double a,double b){\nif(a&lt;b){\nreturn a;\n}else{\nreturn b;\n}\n}\ndouble abs_d(double abc){\nif(abc&lt;0){\nreturn -abc;\n}else{\nreturn abc;\n}\n}\ndouble check_time(double place){\ndouble max_ti=0;\nfor(int i=1;i&lt;=n;i++){\nmax_ti=max_d(max_ti,abs_d(x[i]-place)+t[i]);\n}\nreturn max_ti;\n}\nint main(){\nfreopen(\"banquet.in\",\"r\",stdin);\nfreopen(\"banquet.out\",\"w\",stdout);\nscanf(\"%d\",&amp;T);\nwhile(T--){\nscanf(\"%d\",&amp;n);\nmax_p=0;\nfor(int i=1;i&lt;=n;i++){\nscanf(\"%d\",&amp;x[i]);\nmax_p=max(max_p,x[i]);\n}\nfor(int i=1;i&lt;=n;i++){\nscanf(\"%d\",&amp;t[i]);\n}\ndouble place_ok=0;\ndouble max_tti=0x3f3f;\nfor(double i=1;i&lt;=max_p+0.1;i+=0.1){\ndouble temp=check_time(i);\nif(max_tti&gt;=temp){\nmax_tti=temp;\nplace_ok=i;\n}\n}\ncout&lt;&lt;place_ok&lt;&lt;endl;\n}\nfclose(stdin);\nfclose(stdout);\nreturn 0;\n}\n</code></pre>"},{"location":"2023/03/1/#t3-deploy","title":"T3 deploy","text":"<pre><code>#include &lt;cstdio&gt;\n#include &lt;iostream&gt;\nusing namespace std;\nint n,m,top=0,a[1000009];\nint bian[1000009][2];\nbool is_fa(int now,int ifs){\nif(ifs==1&amp;&amp;now==1){\nreturn false;\n}\nif(now==1){\nreturn true;\n}\nfor(int i=0;i&lt;top;i++){\nif(bian[i][0]==now&amp;&amp;bian[i][1]!=ifs){\nif(is_fa(bian[i][1],bian[i][0])){\nreturn true;\n}\n}\nif(bian[i][1]==now&amp;&amp;bian[i][0]!=ifs){\nif(is_fa(bian[i][0],bian[i][1])){\nreturn true;\n}\n}\n}\nreturn false;\n}\nvoid dfs(int x,int y){\na[x]+=y;\nfor(int i=0;i&lt;top;i++){\nif(bian[i][0]==x){\nif(!is_fa(bian[i][1],x)){\ndfs(bian[i][1],y);\n}\n}\nif(bian[i][1]==x){\nif(!is_fa(bian[i][0],x)){\ndfs(bian[i][0],y);\n}\n}\n}\n}\nint main(){\nfreopen(\"deploy.in\",\"r\",stdin);\nfreopen(\"deploy.out\",\"w\",stdout);\ncin&gt;&gt;n;\nfor(int i=1;i&lt;=n;i++){\ncin&gt;&gt;a[i];\n}\nfor(int i=1;i&lt;n;i++){\nint x,y;\ncin&gt;&gt;x&gt;&gt;y;\nbian[top][0]=x;\nbian[top++][1]=y;\n}\ncin&gt;&gt;m;\nwhile(m--){\nint p,x,y;\ncin&gt;&gt;p&gt;&gt;x&gt;&gt;y; if(p==1){\ndfs(x,y);\n}else{\na[x]+=y;\nfor(int i=0;i&lt;top;i++){\nif(bian[i][0]==x){\na[bian[i][1]]+=y;\n}\nif(bian[i][1]==x){\na[bian[i][0]]+=y;\n}\n}\n}\n}\nint q;cin&gt;&gt;q;\nwhile(q--){\nint x;cin&gt;&gt;x;\ncout&lt;&lt;a[x]&lt;&lt;endl;\n}\nfclose(stdin);\nfclose(stdout);\nreturn 0;\n}\n</code></pre>"},{"location":"2023/03/1/#t4-poetize","title":"T4 poetize","text":"<pre><code>#include &lt;cstdio&gt;\n#include &lt;iostream&gt;\nusing namespace std;\nint n,x,y,z;\nint a[49];\nlong long ans=0;\nbool if_good_hand(){\nfor(int i=1;i&lt;=n+1;i++){\nfor(int j=1;j&lt;=n+1;j++){\nif(a[j-1]-a[i-1]==x){\nfor(int k=1;k&lt;=n+1;k++){\nif(a[k-1]-a[j-1]==y){\nfor(int l=1;l&lt;=n+1;l++){\nif(a[l-1]-a[k-1]==z){\nreturn true;\n}\n}\n}\n}\n}\n}\n}\nreturn false;\n}\nint dfs(int now){\nif(now==n){\nif(if_good_hand()){\nans++;\n}\n}else{\nfor(int i=1;i&lt;=10;i++){\na[now+1]=i+a[now];\ndfs(now+1);\n}\n}\n}\nint main(){\nfreopen(\"poetize.in\",\"r\",stdin);\nfreopen(\"poetize.out\",\"w\",stdout);\ncin&gt;&gt;n&gt;&gt;x&gt;&gt;y&gt;&gt;z;\ndfs(0);\ncout&lt;&lt;ans%998244353&lt;&lt;endl;\nfclose(stdin);\nfclose(stdout);\nreturn 0;\n}\n</code></pre>"},{"location":"2023/03/2/","title":"MyOj \u9879\u76ee","text":"<p>\u672c\u6587\u7f16\u5199\u4e8e 2023/03/14 19:14 (CTS)</p> <p>\u672c\u6587\u66f4\u65b0\u4e8e 2023/03/14 19:14 (CTS)</p> <p>Note</p> <p>\u672c\u9879\u76ee\u5df2\u505c\u6b62\u66f4\u65b0</p> <p></p>"},{"location":"2023/03/2/#\u9879\u76ee\u7b80\u4ecb","title":"\u9879\u76ee\u7b80\u4ecb","text":"<p>OJ(Online Judge) \u5728\u7ebf\u5224\u9898\u7cfb\u7edf \u662f\u4e00\u79cd\u5728\u7f16\u7a0b\u7ade\u8d5b\u4e2d\u7528\u6765\u6d4b\u8bd5\u53c2\u8d5b\u7a0b\u5e8f\u7684\u5728\u7ebf\u7cfb\u7edf\uff0c\u4e3b\u8981\u4f7f\u7528\u4e8e\u65e5\u5e38\u7ec3\u4e60</p> <p>\u5fc5\u987b\u5b9e\u73b0\u7684\u529f\u80fd\uff1a</p> <ol> <li> <p>\u80fd\u591f\u7f16\u8bd1\u5e76\u6267\u884c\u4ee3\u7801</p> </li> <li> <p>\u4f7f\u7528\u9884\u8bbe\u7684\u6570\u636e\u5bf9\u8fd9\u4e9b\u7a0b\u5e8f\u8fdb\u884c\u6d4b\u8bd5</p> </li> <li> <p>\u63d0\u4ea4\u7684\u4ee3\u7801\u5728\u53d7\u9650\u7684\u73af\u5883\u4e0b\u8fd0\u884c</p> </li> <li> <p>\u9700\u8981\u6355\u83b7\u7a0b\u5e8f\u8f93\u51fa\uff0c\u4e0e\u6807\u51c6\u7b54\u6848\u8fdb\u884c\u6bd4\u8f83\u540e\u8fd4\u56de\u7ed3\u679c</p> </li> <li> <p>\u901a\u8fc7\u5224\u65ad\u4e0d\u540c\u7684\u7ed3\u679c\uff0c\u7ed9\u7528\u6237\u53cd\u9988</p> </li> </ol> <p>\u672c\u9879\u76ee\u662f\u4e3a\u4e86\u6821\u5185\u81ea\u5efaOJ\u6240\u7f16\u5199\u7684\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4ee5\u4e0b\u51e0\u4e2a\u529f\u80fd</p> <ol> <li> <p>\u7528\u6237\u9274\u6743\uff08\u5305\u62ec\uff1a\u767b\u5f55\u3001\u6ce8\u518c\u3001\u9274\u6743\u3001\u4fee\u6539\u4e2a\u4eba\u4fe1\u606f\u3001\u4fee\u6539\u5bc6\u7801\u3001\u627e\u56de\u5bc6\u7801\uff09</p> </li> <li> <p>\u9898\u76ee\u53ca\u6d4b\u8bd5\u6570\u636e\u5b58\u50a8\uff08\u5305\u62ec\uff1a\u9898\u76ee\u9898\u9762\u5b58\u50a8\u3001\u9898\u76ee\u6807\u7b7e\u5206\u7c7b\u3001\u6d4b\u8bd5\u6570\u636e\u7ec4\uff09</p> </li> <li> <p>\u8bc4\u6d4b\u673a\uff08\u5305\u62ec\uff1a\u8bc4\u6d4b\u673aapi\u3001\u7f16\u8bd1\u4ee3\u7801\u3001\u6267\u884c\u7a0b\u5e8f\u3001\u6c99\u76d2\u9650\u5236\u3001\u5b9e\u65f6\u7684\u5185\u5b58\u65f6\u95f4\u76d1\u63a7\u3001\u5bf9\u7ed3\u679c\u4e0e\u6807\u51c6\u7b54\u6848\u7684\u6bd4\u5bf9\uff09</p> </li> <li> <p>\u7ba1\u7406\u9762\u677f\uff08\u5305\u62ec\uff1a\u5bf9\u5404\u4e2a\u9898\u76ee\u3001\u6d4b\u8bd5\u6570\u636e\u3001\u8bc4\u6d4b\u8bb0\u5f55\u7b49\u7684\u589e\u5220\u6539\u67e5\uff09</p> </li> <li> <p>\u9644\u52a0\u529f\u80fd\uff08\u5305\u62ec\uff1a\u6574\u6d01\u7684\u9898\u9762\u6253\u5370\u529f\u80fd\u3001\u6269\u5c55\u6027\u6781\u9ad8\u7684\u8bc4\u6d4b\u673a\u3001\u65b9\u4fbf\u5feb\u6377\u7684\u90e8\u7f72\u3001\u5206\u5e03\u5f0f\u7684\u8bc4\u6d4b\u673a\u8bbe\u8ba1\uff09</p> </li> </ol>"},{"location":"2023/03/2/#\u9879\u76ee\u73af\u5883","title":"\u9879\u76ee\u73af\u5883","text":"<ol> <li> <p>Python 3.8</p> </li> <li> <p>Django 3.2</p> </li> <li> <p>django-mdeditor 0.1.20</p> </li> <li> <p>requests 2.26.0</p> </li> <li> <p>psutil 5.9.0</p> </li> </ol>"},{"location":"2023/03/2/#\u9879\u76ee\u90e8\u7f72-\u9ad8\u7ea7","title":"\u9879\u76ee\u90e8\u7f72-\u9ad8\u7ea7","text":""},{"location":"2023/03/2/#\u9879\u76ee\u90e8\u7f72-\u7f51\u7ad9","title":"\u9879\u76ee\u90e8\u7f72-\u7f51\u7ad9","text":"<ol> <li> <p>\u89e3\u538b\u6e90\u4ee3\u7801\u538b\u7f29\u5305</p> </li> <li> <p>\u8fdb\u5165 myoj \u6587\u4ef6\u5939\uff0c\u6253\u5f00\u547d\u4ee4\u63d0\u793a\u7b26</p> </li> <li> <p>\u6267\u884cpip install -r requirements.txt \u4ee5\u5b89\u88c5\u4f9d\u8d56</p> </li> <li> <p>\u6267\u884cpython manage.py runserver \u4ee5\u8fd0\u884c\u7f51\u7ad9</p> </li> <li> <p>\u521d\u59cb\u8d85\u7ea7\u7528\u6237\u4e3aadmin\u5bc6\u7801:123456</p> </li> </ol>"},{"location":"2023/03/2/#\u9879\u76ee\u90e8\u7f72-\u8bc4\u6d4b\u673a","title":"\u9879\u76ee\u90e8\u7f72-\u8bc4\u6d4b\u673a","text":"<ol> <li> <p>\u8fdb\u5165judger_machine\u76ee\u5f55</p> </li> <li> <p>\u6267\u884cpip install -r requirements.txt \u4ee5\u5b89\u88c5\u4f9d\u8d56</p> </li> <li> <p>\u6253\u5f00judgertap.py \u6587\u4ef6\u7b2c4\u884c\u66f4\u6362\u6210\u81ea\u5df1\u7684\u7f51\u7ad9\u5730\u5740</p> </li> <li> <p>\u6267\u884cpython judgertap.py\u4ee5\u8fd0\u884c\u8bc4\u6d4b\u673a</p> </li> </ol> <p>\u6ce8\uff1a\u8bc4\u6d4b\u673a\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u591a\u53f0\uff0c\u4ee5\u5feb\u901f\u5904\u7406\u8bc4\u6d4b\u4efb\u52a1</p> <p>\u521d\u59cb\u8d85\u7ea7\u7528\u6237\u4e3aadmin\u5bc6\u7801:123456</p>"},{"location":"2023/04/1/","title":"\u5316\u5b66\u65b9\u7a0b\u5f0f\u6574\u74069\u4e0a","text":"<p>\u672c\u6587\u7f16\u5199\u4e8e 2023/04/01 (CTS)</p> <p>\\(2Mg+O\u2082=\u70b9\u71c3=2MgO \u71c3\u70e7\u9541\\)</p> <p>\\(4P+5O\u2082=\u70b9\u71c3=2P\u2082O\u2085 \u71c3\u70e7\u78f7\\)</p> <p>\\(S+O\u2082=\u70b9\u71c3=SO\u2082 \u71c3\u70e7\u786b\\)</p> <p>\\(C+O\u2082=\u70b9\u71c3=CO\u2082 \u71c3\u70e7\u70ad\\)</p> <p>\\(3Fe+2O\u2082=\u70b9\u71c3=Fe\u2083O\u2084 \u71c3\u70e7\u94c1\\)</p> <p>\\(2KMnO\u2084=\u25b3=K\u2082MnO\u2084+MnO\u2082+O\u2082\u2191 \u9ad8\u731b\u9178\u94be\u5236\u6c27\u6c14\\)</p> <p>\\(2H\u2082O\u2082=MnO\u2082=2H\u2082O+O\u2082\u2191 \u8fc7\u6c27\u5316\u6c22\u5236\u6c27\u6c14\\)</p> <p>\\(2KClO\u2083=\u25b3+MnO\u2082=2KCl+3O\u2082\u2191 \u6c2f\u9178\u94be\u5236\u6c27\u6c14\\)</p> <p>\\(Fe+CuSO\u2084=FeSO\u2084+Cu \u7528\u94c1\u7f6e\u6362\u94dc\\)</p> <p>\\(CuO+H\u2082=\u25b3=Cu+H\u2082O \u7528\u6c22\u8fd8\u539f\u6c27\u5316\u94dc\\)</p> <p>\\(C+O\u2082=\u70b9\u71c3=CO\u2082 \u6728\u70ad\u5145\u5206\u71c3\u70e7\u4ea7\u751f\u4e8c\u6c27\u5316\u78b3\\)</p> <p>\\(2C+O\u2082=\u70b9\u71c3=2CO \u6728\u70ad\u4e0d\u5145\u5206\u71c3\u70e7\u4ea7\u751f\u4e00\u6c27\u5316\u78b3\\)</p> <p>\\(2CuO+C=\u9ad8\u6e29=2Cu+CO\u2082\u2191 \u6728\u70ad\u8fd8\u539f\u6c27\u5316\u94dc\\)</p> <p>\\(2Fe\u2082O\u2083+3C=\u9ad8\u6e29=4Fe+3CO\u2082\u2191 \u6728\u70ad\u8fd8\u539f\u6c27\u5316\u94c1\\)</p> <p>\\(CO\u2082+C=\u9ad8\u6e29=2CO \u70ad\u4f7f\u4e8c\u6c27\u5316\u78b3\u8f6c\u53d8\u6210\u4e00\u6c27\u5316\u78b3\\)</p> <p>\\(CaCO\u2083+2HCl=CaCl\u2082\u2191+H\u2082O \u7a00\u76d0\u9178\u548c\u5927\u7406\u77f3\u5236\u53d6\u4e8c\u6c27\u5316\u78b3\\)</p> <p>\\(CO\u2082+H\u2082O=H\u2082CO\u2083 \u4e8c\u6c27\u5316\u78b3\u4e0e\u6c34\u53cd\u5e94\u5f62\u6210\u78b3\u9178\\)</p> <p>\\(H\u2082CO\u2083= CO\u2082\u2191+H\u2082O \u78b3\u9178\u5206\u89e3\u6210\u4e8c\u6c27\u5316\u78b3\u548c\u6c34\\)</p> <p>\\(CO\u2082+Ca(OH)\u2082=CaCO\u2083\u2193+H\u2082O \u4e8c\u6c27\u5316\u78b3\u4e0e\u6c22\u6c27\u5316\u9499\u53cd\u5e94\u5f62\u6210\u767d\u8272\u7684\u78b3\u9178\u9499\u6c89\u6dc0\\)</p> <p>\\(\u5982\u7ee7\u7eed\u901a\u5165CO\u2082\u90a3\u4e48CaCO\u2083+H\u2082O+CO\u2082=Ca(HCO\u2083)\u2082 Ca(HCO\u2083)\u2082\u53ef\u6eb6\u4e8e\u6c34\\)</p> <p>\\(2CO+O\u2082=\u70b9\u71c3=2CO\u2082 \u4e00\u6c27\u5316\u78b3\u71c3\u70e7\\)</p> <p>\\(CuO+CO=\u25b3=Cu+CO\u2082 \u4e00\u6c27\u5316\u78b3\u8fd8\u539f\u6c27\u5316\u94dc\\)</p> <p>\\(Na\u2082CO\u2083+2HCl=2NaCl+H\u2082O+CO\u2082\u2191 \u6d53\u76d0\u9178\u4e0e\u78b3\u9178\u94a0\u6eb6\u6db2\u53cd\u5e94(\u706d\u706b\u5668\u7684\u539f\u7406)\\)</p> <p>\\(2NaHCO\u2083=\u25b3=Na\u2082CO\u2083+H\u2082O+CO\u2082\u2191 \u78b3\u9178\u94a0\u7c89\u672b(\u706d\u706b\u5668\u5185\u7684\u7c89\u672b)\\)</p> <p>\\(CaO+H\u2082O=Ca(OH)\u2082 \u751f\u77f3\u7070\u4e0e\u6c34\u53cd\u5e94\u653e\u51fa\u70ed\u91cf\\)</p> <p>\\(CH\u2084+2O\u2082=\u70b9\u71c3=CO\u2082+2H\u2082O \u7532\u70f7\u71c3\u70e7\\)</p> <p>\\(2H\u2082+O\u2082=\u70b9\u71c3=2H\u2082O \u6c22\u6c14\u71c3\u70e7\\)</p> <p>\\(C\u2082H\u2085OH+3O\u2082=\u70b9\u71c3=2CO\u2082+3H\u2082O \u4e59\u9187\u71c3\u70e7\\)</p> <p>\\(Zn+H\u2082SO\u2084=ZnSO\u2084+H\u2082\u2191 \u950c\u4e0e\u7a00\u786b\u9178\u53cd\u5e94\u5236\u53d6\u6c22\u6c14\\)</p>"},{"location":"2023/04/2/","title":"Python\u6a21\u62df\u629b\u786c\u5e01\u5b9e\u9a8c","text":"<p>\u672c\u6587\u7f16\u5199\u4e8e 2023/04/02 (CTS)</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nfrom random import randint\nfrom uuid import uuid4\ndef rnum():\n    return randint(0,1)\nx=[]\ny=[]\nz=[]\nn=0\nys=0\nzs=0\nfor i in range(1000000):\n    n=n+1\n    if rnum()==0:\n        zs=zs+1\n    else:\n        ys=ys+1\n    x.append(i)\n    y.append(ys/n)\n    z.append(zs/n)\nprint(x,y)\nl1=plt.plot(x,y,z)\nl2=plt.plot(x,[0.5]*1000000,color=\"black\", linewidth=1)\nplt.legend(handles=[l1, l2], labels=['P(A)', '0.5'])\nplt.show()\n\n# plt.savefig('./'+str(uuid4())+'.jpg')\n# plt.clf()\n</code></pre>"},{"location":"2023/04/3/","title":"Python\u5220\u9664\u6587\u4ef6","text":"<p>\u672c\u6587\u7f16\u5199\u4e8e 2023/04/03 (CTS)</p> <p>\u5148\u5c06\u6587\u4ef6\u8986\u76d6\u4e3a\u7a7a\uff0c\u7136\u540e\u5220\u9664\uff0c\u505a\u5230\u4e86\u5b89\u5168\u5220\u9664\u6587\u4ef6\u7684\u9700\u6c42</p> <pre><code>import os\ndirs=[]\nnotper=0\nnotfile=0\noser=0\nwhile True:\n    t=input(\"filePath:\")\n    if t=='':\n        break\n    dirs.append(t)\nfor i in dirs:\n    try:\n        print(\"\\nFile:{}\".format(i))\n        size=os.stat(i).st_size\n        print(\" Size {}\".format(size))\n        fd=os.open(i,os.O_WRONLY)\n        os.write(fd,b'\\000'*size)\n        os.close(fd)\n        os.remove(i)\n    except FileNotFoundError:\n        print(\" The File NOT Found\")\n        notfile=notfile+1\n    except PermissionError:\n        print(\" The Program Not has this File Write Permission\")\n        notper=notper+1\n    except [WindowsError,OSError,EnvironmentError,IOError] as e:\n        print(\" WANING:OS I/O ERROR\")\n        oser=oser+1\n    else:\n        print(\" OK\")\nprint(\"\\nTotal:{}\\nSuccess:{}\\nFail:{}\\n Not Found File:{}\\n Not Permission:{}\\n OS I/O ERROR:{}\\n\".format(\n    len(dirs),(len(dirs)-notfile-notper-oser),(notfile+notper+oser),\n    notfile,notper,oser\n))\nos.system(\"pause\")\n</code></pre>"},{"location":"2023/04/4/","title":"Python\u5c40\u57df\u7f51\u901a\u4fe1\u5c0f\u5de5\u5177","text":"<p>\u672c\u6587\u7f16\u5199\u4e8e 2023/04/04 (CTS)</p> <pre><code>import threading\nimport tkinter as tk\nfrom tkinter import ttk\nfrom tkinter import messagebox,scrolledtext,END\nfrom socket import *\nimport json,time\ninfo='''\nmake by liuzihaohao\n'''\nclass App(object):\n    def __init__(self):\n        self.root = tk.Tk()\n        self.root.title(\"\u901a\u8baf\u5c0f\u5de5\u5177\")\n        self.root.resizable(False, False)\n        self.layout()\n        # self.root.protocol(\"WM_DELETE_WINDOW\", self._stop)\n        self.root.mainloop()\n    def _stop(self):\n        exit(0)\n    def layout(self):\n        tabContainer = ttk.Notebook(self.root)\n        tabContainer.pack()\n\n        HomeTab = ttk.Frame(tabContainer)\n        tabContainer.add(HomeTab, text='\u4e3b\u754c\u9762')\n        self._layHomeTab(HomeTab)\n\n        ipTab = ttk.Frame(tabContainer)\n        tabContainer.add(ipTab, text='\u67e5\u8be2IP')\n        self._layIpTab(ipTab)\n\n        # HelpTab = ttk.Frame(tabContainer)\n        # tabContainer.add(HelpTab, text='\u5e2e\u52a9')\n        # self._layHelpTab(HelpTab)\n    def _layIpTab(self, tab):\n        transferBtn = ttk.Button(tab, text='\u67e5\u8be2', command=self._scachip)\n        transferBtn.grid(row=7, column=0, padx=0, pady=20)\n\n        self._ipout=tk.Text(tab)\n        self._ipout.grid(row=0, column=1, padx=3, pady=10, columnspan=2,rowspan=2)\n    def _scachip(self):\n        self._ipout.delete(1.0,\"end\")\n        addrs = getaddrinfo(gethostname(),None)\n        for item in addrs:\n            if item[0]==AF_INET:\n                self._ipout.insert('insert',item[4][0]+\"\\n\")\n    def _layHomeTab(self,tab):\n        self.msgst=tk.scrolledtext.ScrolledText(tab,height=33, wrap=tk.WORD)\n        self.msgst.grid(row=0, column=0, padx=0, pady=0, columnspan=3,rowspan=5)\n        # self.msgst=tk.Text(tab,height=33)\n        # self.msgst.grid(row=0, column=0, padx=0, pady=0, columnspan=3,rowspan=5)\n\n        # self.inputs=tk.Text(tab,width=40)\n        self.inputs = tk.scrolledtext.ScrolledText(tab, width=40, wrap=tk.WORD)\n        self.inputs.grid(row=0, column=4, padx=3,\n                         pady=10, columnspan=4, rowspan=2)\n\n        temp = ttk.Button(tab, text='\u6e05\u7a7a', command=self._clear)\n        temp.grid(row=2, column=4, padx=0, pady=0)\n\n        temp = ttk.Button(tab, text='\u53d1\u9001', command=self._gomsg)\n        temp.grid(row=2, column=5, padx=0, pady=0)\n\n        self._PORT = tk.StringVar()\n        self._PORT.set(\"8000\")\n        ttk.Label(tab, text='\u7aef\u53e3:') \\\n            .grid(row=2, column=6, padx=5, pady=10)\n        ttk.Entry(tab, textvariable=self._PORT, justify='left', width=10) \\\n            .grid(row=2, column=7, padx=5, pady=10, columnspan=1)\n\n        self._IP = tk.StringVar()\n        self._IP.set(\"127.0.0.1\")\n        ttk.Label(tab, text='\u76ee\u6807IP:') \\\n            .grid(row=3, column=4, padx=5, pady=10)\n        ttk.Entry(tab, textvariable=self._IP, justify='left', width=10) \\\n            .grid(row=3, column=5, padx=5, pady=10, columnspan=1)\n\n        self._IPme = tk.StringVar()\n        self._IPme.set(\"127.0.0.1\")\n        ttk.Label(tab, text='\u672c\u5730IP:') \\\n            .grid(row=3, column=6, padx=5, pady=10)\n        ttk.Entry(tab, textvariable=self._IPme, justify='left', width=10) \\\n            .grid(row=3, column=7, padx=5, pady=10, columnspan=1)\n\n        temp = ttk.Button(tab, text='\u505c\u6b62', command=self._stopserver)\n        temp.grid(row=4, column=4, padx=0, pady=0, columnspan=2)\n\n        temp = ttk.Button(tab, text='\u8fd0\u884c', command=self._runserver)\n        temp.grid(row=4, column=6, padx=0, pady=0, columnspan=2)\n    def _layHelpTab(self,tab):\n        ttk.Label(tab,text=info).grid(row=0,column=0)\n    def _clear(self):\n        self.inputs.delete(1.0,\"end\")\n    def _gomsg(self):\n        try:\n            tcp_client_socket = socket(AF_INET, SOCK_STREAM)\n            tcp_client_socket.connect((self._IP.get(), int(self._PORT.get())))\n            send_data = self.inputs.get(1.0,\"end\")\n            tcp_client_socket.send(self._msgsEncode(send_data).encode(\"gbk\"))\n            # recvData = tcp_client_socket.recv(1024)\n            tcp_client_socket.close()\n            self._clear()\n        except Exception as e:\n            messagebox.showerror(\"ERROR\",e)\n    def _runserver(self):\n        self.serverthread=threading.Thread(target=self._server)\n        self.serverthreadstop=False\n        self.serverthread.start()\n    def _stopserver(self):\n        # self.serverthread.stop()\n        self.serverthreadstop=True\n    def _server(self):\n        while True:\n            tcp_server_socket = socket(AF_INET, SOCK_STREAM)\n            tcp_server_socket.bind((self._IPme.get(), int(self._PORT.get())))\n            tcp_server_socket.listen(128)\n            # tcp_server_socket.setblocking(False)\n            client_socket, clientAddr = tcp_server_socket.accept()\n            recv_data = client_socket.recv(10000)\n            # self.msgst.insert('insert',\"[\"+clientAddr[0]+\"]():\\n\"+recv_data.decode(\"gbk\")+\"\\n\")\n            self.msgst.insert('insert',self._msgsDecode(recv_data.decode(\"gbk\"),clientAddr))\n            self.msgst.see(END)\n            client_socket.send(\"OK200\".encode('gbk'))\n            client_socket.close()\n            if self.serverthreadstop:\n                break\n    def _msgsDecode(self,recv_data,clientAddr):\n        temp=json.loads(recv_data)\n        return \"[\"+clientAddr[0]+\"](\"+temp[\"time\"]+\"):\\n\"+temp[\"data\"]+\"\\n\"\n    def _msgsEncode(self,data):\n        temp=json.dumps({\n            \"time\":self._gettime(),\n            \"data\":data\n        })\n        return temp\n    def _gettime(self):\n        t=time.localtime(time.time())\n        return str(t.tm_year)+\"/\"+str(t.tm_mon)+\"/\"+str(t.tm_mday)+\" \"+str(t.tm_hour)+\":\"+str(t.tm_min)+\":\"+str(t.tm_sec)\ndef runapp():\n    app=App()\nif __name__ == '__main__':\n    app = App()\n</code></pre>"},{"location":"2023/04/5/","title":"Python\u6570\u5b57\u70b8\u5f39\u6e38\u620f","text":"<p>\u672c\u6587\u7f16\u5199\u4e8e 2023/04/05 (CTS)</p> <pre><code>_icon=\"\"\" _______\n|4855544|\n|8545212|---~~/ numberbool\n|_______|\n\"\"\"\nfrom random import randint\n#print(_lzhicon)\nprint(_icon)\nDEBUG=False\ndef prin(a):\n    if DEBUG:\n        print(\"[DEBUG]\",a)\nplayer=int(input(\"\u8bf7\u8f93\u5165\u73a9\u5bb6\u6570\u91cf&gt;\"))\nmax=100\nmin=0\n# randnumber=randint(min,max)\nrandnumber=19\nprin(\"randnumber:\"+str(randnumber))\ndef caishu(i,min,max):\n    print(\"\u6700\u5927\u4e0a\u9650\",max,\",\u6700\u5c0f\u4e0b\u9650\",min)\n    try:\n        temp=int(input(\"\u73a9\u5bb6\"+str(i)+\"\u731c1\u4e2a\u6570\u5b57&gt;\"))\n    except ValueError as e:\n        prin(str(e))\n        print(\"\u8f93\u5165\u7684\u4e0d\u662f\u6570\u5b57\")\n        c,min,max=caishu(i,min,max)\n        return [c,min,max]\n    if temp&gt;=min and temp&lt;=max:\n        if temp==randnumber:\n            print(\"\u73a9\u5bb6\",i,\"\u51fa\u5c40\")\n            return [-1,min,max]\n        else:\n            if temp&lt;randnumber:\n                print(\"\u5c0f\u4e86\")\n                min=temp\n            else:\n                print(\"\u5927\u4e86\")\n                max=temp\n    else:\n        print(\"\u6570\u4e0d\u5728\u8303\u56f4\u5185,\u91cd\u65b0\u8f93\u5165\")\n        c,min,max=caishu(i,min,max)\n        return [c,min,max]\n    print()\n    return [0,min,max]\nc=0\nwhile True:\n    for i in range(1,player+1):\n        c,min,max=caishu(i,min,max)\n        if c!=0:\n            break\n    if c!=0:\n        break\nwhile True:pass\n</code></pre>"},{"location":"2023/04/6/","title":"Python\u5012\u8ba1\u65f6\u7a0b\u5e8f","text":"<p>\u672c\u6587\u7f16\u5199\u4e8e 2023/04/06 (CTS)</p> <pre><code>from tkinter import *\nimport time\nimport tkinter.messagebox\n\nclass App:\n    def __init__(self,master):\n        frame = Frame(master)\n        frame.pack()\n        self.entryWidget = Entry(frame)\n        self.entryWidget[\"width\"] = 50\n        self.entryWidget.pack(side=LEFT)\n        self.hi_there = Button(frame, text=\"\u5f00\u59cb\", command=self.start)\n        self.hi_there.pack(side=LEFT)\n    def start(self):\n        text = self.entryWidget.get().strip()\n        root.attributes('-fullscreen', True)\n        self.hi_there.pack_forget()\n        self.entryWidget.pack_forget()\n        self.countDown(int(text))\n\n    def countDown(self,seconds):\n        lbl1.config(bg='yellow')\n        lbl1.config(height=3, font=('times', 200, 'bold'))\n        for k in range(seconds, 0, -1):\n         if k == 30:\n          print(\"\\a\")\n         if k== 29:\n          print(\"\\a\")\n         if k== 28:\n          print(\"\\a\")\n         lbl1[\"text\"] = k\n         root.update()\n         time.sleep(1)\n        lbl1.config(bg='red')\n        lbl1.config(fg='#000000')\n        lbl1[\"text\"] = \"\"\n        tkinter.messagebox.showinfo(\"\u7ed3\u675f\",\"\u7ed3\u675f\")\n        root.attributes('-fullscreen', F)\n        root.quit()\n\n        def GetSource():\n          get_window = Tkinter.Toplevel(root)\n          get_window.title('Source File?')\n          Tkinter.Entry(get_window, width=30,\n              textvariable=source).pack()\n          Tkinter.Button(get_window, text=\"Change\",\n              command=lambda: update_specs()).pack()\n\ndef key(key):\n    root.quit()\n\nroot = Tk()\nroot.title(\"\")\nlbl1 = Label()\nlbl1.pack(fill=BOTH, expand=1)\napp = App(root)\nroot.bind(\"&lt;Escape&gt;\", key)\nroot.mainloop()\n</code></pre>"},{"location":"2023/04/7/","title":"\u5355\u8bcd\u8bfb\u97f3\u7ec3\u4e60\u7a0b\u5e8f","text":"<p>\u672c\u6587\u7f16\u5199\u4e8e 2023/04/07 (CTS)</p> <p></p>"},{"location":"2023/04/7/#\u7b80\u4ecb","title":"\u7b80\u4ecb","text":"<p>\u7ed9\u51fa\u5355\u8bcd\u9009\u62e9\u5bf9\u5e94\u8bfb\u97f3\u7684\u97f3\u6807</p>"},{"location":"2023/04/7/#\u4f7f\u7528\u65b9\u6cd5","title":"\u4f7f\u7528\u65b9\u6cd5","text":"<p>\u6253\u5f00\u540e\u6839\u636e\u5355\u8bcd\u9009\u97f3\u6807</p> <p>\u9009\u62e9\u4e4b\u540e\u4f1a\u663e\u793a\u6b63\u786e\u548c\u9519\u8bef</p> <p>\u7136\u540e\u70b9\u51fbNext\u53ef\u4ee5\u5207\u6362\u5230\u4e0b\u4e00\u4e2a</p>"},{"location":"2023/04/7/#\u94fe\u63a5","title":"\u94fe\u63a5","text":"<p>word_exerciser.html</p>"},{"location":"2023/05/1/","title":"hard_cipher","text":"<p>\u672c\u6587\u7f16\u5199\u4e8e 2023/05/01 (CTS)</p> <p>Note</p> <p>\u672c\u9879\u76ee\u4e3a\u7b80\u5355\u7684\u4f5c\u54c1,\u4e0d\u4f1a\u5bf9\u5176\u8fdb\u884c\u66f4\u65b0</p> <p></p>"},{"location":"2023/05/1/#\u7b80\u4ecb","title":"\u7b80\u4ecb","text":"<p>\u4f7f\u7528 AES \u52a0\u5bc6\u65b9\u5f0f\u6765\u4fdd\u62a4\u6570\u636e,</p> <p>\u56e0\u4e3a AES \u4e3a\u5bf9\u79f0\u52a0\u5bc6,\u6240\u4ee5\u5bc6\u94a5\u5728\u52a0\u89e3\u5bc6\u8fc7\u7a0b\u4e2d\u90fd\u662f\u76f8\u540c\u7684,\u6240\u4ee5\u5f88\u5bb9\u6613\u7834\u89e3,</p> <p>\u53ef\u4ee5\u5c06 PassWorld \u548c Iv \u6570\u7ec4\u5237\u5165 Arduino Uno,\u5e76\u5728\u89e3\u5bc6\u65f6\u5c06 Arduino Uno \u4f7f\u7528\u4e32\u53e3\u7684\u65b9\u5f0f\u8fdb\u884c\u901a\u4fe1,</p> <p>\u89e3\u5bc6\u8fc7\u7a0b\u5728 Arduino Uno \u5185\u8fdb\u884c,\u4e0d\u4f1a\u6cc4\u9732 PassWorld \u548c Iv \u6570\u7ec4,\u4ee5\u8fbe\u5230\u5b89\u5168\u7684\u52a0\u5bc6\u3002</p>"},{"location":"2023/05/1/#\u4ee3\u7801","title":"\u4ee3\u7801","text":"<ol> <li> <p>make.py \u53ef\u4ee5\u751f\u6210\u5bc6\u94a5\u548c\u5199\u8fdb Arduino Uno \u7684\u4ee3\u7801</p> </li> <li> <p>newdata.py \u53ef\u4ee5\u6839\u636e PassWorld \u548c Iv \u52a0\u5bc6\u6570\u636e</p> </li> <li> <p>local.py \u53ef\u4ee5\u4f7f\u7528\u4e32\u53e3\u4e0e Arduino Uno \u8fdb\u884c\u901a\u4fe1\u4ee5\u89e3\u5bc6\u6587\u672c</p> </li> </ol>"},{"location":"2023/05/2/","title":"Nginx \u4f7f\u7528\u65b9\u6cd5","text":"<p>\u672c\u6587\u7f16\u5199\u4e8e 2023/05/02</p>"},{"location":"2023/05/2/#\u4e0b\u8f7d","title":"\u4e0b\u8f7d","text":"<p>nginx: download</p>"},{"location":"2023/05/2/#\u547d\u4ee4","title":"\u547d\u4ee4","text":""},{"location":"2023/05/2/#\u542f\u52a8","title":"\u542f\u52a8","text":"<p><code>./nginx</code></p>"},{"location":"2023/05/2/#\u91cd\u542f","title":"\u91cd\u542f","text":"<p><code>./nginx -s reload</code></p>"},{"location":"2023/05/2/#\u68c0\u67e5\u914d\u7f6e\u6587\u4ef6","title":"\u68c0\u67e5\u914d\u7f6e\u6587\u4ef6","text":"<p><code>./nginx -t</code></p>"},{"location":"2023/05/2/#\u5173\u95ed","title":"\u5173\u95ed","text":"<p><code>./nginx -s stop</code></p>"},{"location":"2023/05/2/#\u4f7f\u7528\u573a\u666f","title":"\u4f7f\u7528\u573a\u666f","text":""},{"location":"2023/05/2/#\u53cd\u5411\u4ee3\u7406","title":"\u53cd\u5411\u4ee3\u7406","text":"<p>\u4f7f\u7528 Nginx \u4ee3\u7406\u670d\u52a1\u5668\u7684\u6240\u6709\u6d41\u91cf\uff0c</p> <p></p> <p>\u5373\u53ef\u5b9e\u73b0\u76d1\u542c\u4e00\u4e2a\u7aef\u53e3\u7684\u6570\u636e\uff0c\u5e76\u6309\u7167\u4e0d\u540c\u57df\u540d\u7684\u8bbf\u95ee\u8bf7\u6c42\u5206\u5230\u4e0d\u540c\u7684\u670d\u52a1\u5668\u4e2d</p> <pre><code>server {\nlisten 80;\nserver_name example.com;# \u914d\u7f6e\u4ee3\u7406\u7684\u57df\u540d\nlocation / {\nproxy_pass http://127.0.0.1:8000;# \u914d\u7f6e\u670d\u52a1\u5668\u5730\u5740\n}\n}\n</code></pre>"},{"location":"2023/05/2/#\u8d1f\u8f7d\u5747\u8861","title":"\u8d1f\u8f7d\u5747\u8861","text":"<p>\u4f7f\u7528 Nginx \u5c06\u6240\u6709\u8bbf\u95ee\u6d41\u91cf\u5206\u914d\u5230\u5404\u4e2a\u670d\u52a1\u5668\u4e0a</p>"},{"location":"2023/05/2/#\u6743\u91cd","title":"\u6743\u91cd","text":"<p>\u6309\u7167 weight \u503c\u6765\u5206\u914d\u6d41\u91cf</p>"},{"location":"2023/05/2/#hash","title":"hash","text":"<p>\u6309\u7167\u8bbf\u95ee IP \u7684 hash \u6765\u5206\u914d\u6d41\u91cf</p>"},{"location":"2023/05/2/#\u5176\u4ed6\u53c2\u6570","title":"\u5176\u4ed6\u53c2\u6570","text":"<ol> <li>backup \u5176\u4ed6\u670d\u52a1\u5668\u90fd\u65e0\u6cd5\u8bbf\u95ee\u65f6 \u8bbf\u95ee\u8be5\u53f0\u670d\u52a1\u5668</li> <li>down \u6b64\u670d\u52a1\u5668\u4e0d\u8fdb\u884c\u8d1f\u8f7d\u5747\u8861</li> <li>max_fails \u6700\u5927\u5931\u8d25\u6b21\u6570</li> <li>fail_timeout \u5931\u8d25\u540e\u7b49\u5f85\u7684\u65f6\u95f4</li> </ol>"},{"location":"2023/05/2/#\u9759\u6001\u8d44\u6e90\u8bbf\u95ee","title":"\u9759\u6001\u8d44\u6e90\u8bbf\u95ee","text":"<p>\u53ef\u4ee5\u4f7f\u7528 Nginx \u76f4\u63a5\u4ee3\u7406\u9759\u6001\u8d44\u6e90</p> <pre><code>location / {\nroot /;# \u9759\u6001\u8d44\u6e90\u8def\u5f84\nindex index.htm index.html;# \u9ed8\u8ba4\u8bbf\u95ee\u7684\u6587\u4ef6\n}\n</code></pre>"},{"location":"2023/05/2/#stream","title":"Stream","text":"<p>Nginx \u5b9e\u73b0\u7aef\u53e3\u8f6c\u53d1 TCP \u6570\u636e\u5305</p> <pre><code>stream {\nserver {\nlisten 8888;\nproxy_pass 127.0.0.1:9999;\n}\n}\n</code></pre>"},{"location":"2023/05/3/","title":"3","text":""},{"location":"2023/06/1/","title":"914D \u9898\u89e3","text":"<p>\u672c\u6587\u7f16\u5199\u4e8e 2023/06/04</p> <p>D. Bash and a Tough Math Puzzle</p>"},{"location":"2023/06/1/#\u601d\u8def","title":"\u601d\u8def","text":"<p>\u81f3\u591a\u4fee\u6539\u4e00\u4e2a\u6570\uff0c\u4f7f\u5f97 \\(\\gcd(a_l,a_{l+1},\\cdots,a_r)=x\\) \u3002</p> <p>\u90a3\u4e48  \\([a_l,a_{l+1},\\cdots,a_r]\\) \u81f3\u591a\u4fee\u6539\u4e00\u4e2a\u6570\u540e\uff0c\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u90fd\u53ef\u4ee5\u88ab \\(x\\) \u6574\u9664\u3002</p> <p>\u5c31\u662f\u5728\u95ee\u662f\u5426\u53ea\u6709\u4e00\u4e2a\u6570\u6216\u6ca1\u6709\u6570\u4e0d\u80fd\u88ab \\(x\\) \u6574\u9664\u3002</p> <p>\u8bbe \\(cnt\\) \u4e3a\u4e3a\u533a\u95f4\u5185\u4e0d\u80fd\u88ab \\(x\\) \u6574\u9664\u7684\u6570\u7684\u4e2a\u6570\u3002</p> <ol> <li> <p>\\(cnt=0\\) \u53ef\u4ee5\u968f\u610f\u4fee\u6539\u4efb\u610f\u4e00\u4e2a\u6570\u4e3a \\(x\\)</p> </li> <li> <p>\\(cnt=1\\) \u5c06\u4e0d\u80fd\u88ab \\(x\\) \u6574\u9664\u7684\u6570\u5b57\u6539\u4e3a \\(x\\)</p> </li> <li> <p>\\(cnt\\ge2\\) \u81f3\u591a\u4fee\u6539\u4e00\u4e2a\u6570\u4e5f\u4e0d\u80fd\u4f7f \\(\\gcd(a_l,a_{l+1},\\cdots,a_r)=x\\) </p> </li> </ol>"},{"location":"2023/06/1/#\u4ee3\u7801\u5b9e\u73b0","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<p>\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u7ebf\u6bb5\u6811\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4 \\(gcd\\)\u3002</p> <p>\u5982\u679c\u4e00\u6bb5\u533a\u95f4\u7684 \\(gcd\\) \u90fd\u80fd\u6574\u9664 \\(x\\)\uff0c\u90a3\u4e48\u8fd9\u6bb5\u533a\u95f4\u7684\u6240\u6709\u6570\u4e5f\u90fd\u80fd\u6574\u9664 \\(x\\)\u3002</p> <ul> <li>\u5bf9\u4e8e\u64cd\u4f5c \\(1\\)</li> </ul> <p>\u9012\u5f52\u5230\u5f53\u524d\u8282\u70b9\u7684\u65f6\u5019\u5982\u679c\u5f53\u524d\u8282\u70b9\u4e0d\u80fd\u88abx\u6574\u9664\uff0c<code>cnt++</code>\u3002</p> <p>\u800c\u4e14\u5728\u9012\u5f52\u65f6\u53ea\u8981 \\(cnt\\ge2\\) \u5c31\u505c\u6b62\u9012\u5f52\u3002</p> <ul> <li>\u5bf9\u4e8e\u64cd\u4f5c \\(2\\)</li> </ul> <p>\u76f4\u63a5\u8fdb\u884c\u5355\u70b9\u4fee\u6539\uff0c\u7136\u540e\u5411\u7236\u8282\u70b9\u66f4\u65b0\u533a\u95f4 \\(gcd\\)</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nconst int N=5e5+5;\nint n,q,cnt,seg[N&lt;&lt;2];\nint gcd(int x,int y) {\nreturn y?gcd(y,x%y):x;\n}\nvoid pushup(int rt) {\nseg[rt]=gcd(seg[rt*2],seg[rt*2+1]);\n}\nvoid build(int rt,int l,int r) {\nif(l==r) {\nscanf(\"%d\",&amp;seg[rt]);\nreturn;\n}\nint mid=(l+r)&gt;&gt;1;\nbuild(rt*2,l,mid);\nbuild(rt*2+1,mid+1,r);\npushup(rt);\n}\nvoid modify(int x,int rt,int l,int r,int val) {\nif(l==r) {\nseg[rt]=val;\nreturn;\n}\nint mid=(l+r)&gt;&gt;1;\nif(x&lt;=mid) modify(x,rt*2,l,mid,val);\nelse modify(x,rt*2+1,mid+1,r,val);\npushup(rt);\n}\nvoid query(int x,int y,int rt,int l,int r,int d) {\nif(cnt&gt;1) return;\nif(l==r) {\n++cnt;\nreturn;\n}\nint mid=(l+r)&gt;&gt;1;\nif(x&lt;=mid&amp;&amp;seg[rt*2]%d) query(x,y,rt*2,l,mid,d);\nif(mid&lt;y&amp;&amp;seg[rt*2+1]%d) query(x,y,rt*2+1,mid+1,r,d);\n}\nint main(void) {\nscanf(\"%d\",&amp;n);\nbuild(1,1,n);\nscanf(\"%d\",&amp;q);\nwhile(q--) {\nint opt;\nscanf(\"%d\",&amp;opt);\nif(opt==1) {\nint l,r,x;\nscanf(\"%d%d%d\",&amp;l,&amp;r,&amp;x);\ncnt=0,query(l,r,1,1,n,x);\nputs(cnt&gt;1?\"NO\":\"YES\");\n} else {\nint x,k;\nscanf(\"%d%d\",&amp;x,&amp;k);\nmodify(x,1,1,n,k);\n}\n}\nreturn 0;\n}\n</code></pre>"}]}